{
    "auth": "private_key_header",
    "calls": {
        "AAD": {
            "body": "{\n        \"model\": \"<model>\",\n        \"messages\": <messages>,\n        \"store\": <store>,    \n        \"metadata\": <metadata>,\n        \"frequency_penalty\": <frequency_penalty>,\n        \"logit_bias\": <logit_bias>,\n        \"logprobs\": <logprobs>,\n        \"top_logprobs\": <top_logprobs>,\n        \"max_completion_tokens\": <max_completion_tokens>,\n        \"n\": <n>,\n        \"modalities\": <modalities>,\n        \"prediction\": <prediction>,\n        \"audio\": <audio>,\n        \"presence_penalty\": <presence_penalty>,\n        \"response_format\": <response_format>,\n        \"seed\": <seed>,\n        \"service_tier\": \"<service_tier>\",\n        \"stop\": \"<stop>\",\n        \"stream\": <stream>,\n        \"stream_options\":<stream_options>,\n        \"temperature\": <temperature>,\n        \"top_p\": <top_p>,\n        \"tools\": <tools>,\n        \"user\": \"<user>\"\n}",
            "body_params": {
                "AAH": {
                    "doc": "ID of the model to use. See the model endpoint compatibility table for details on which models work with the Chat API.",
                    "key": "model",
                    "private": true,
                    "value": "gpt-4o"
                },
                "AAI": {
                    "doc": "A list of messages comprising the conversation so far. Depending on the model you use, different message types (modalities) are supported, like text, images, and audio.",
                    "key": "messages",
                    "private": true,
                    "value": "[{\"role\":\"system\",\"content\":\"You are a helpful assistant.\"},{\"role\":\"user\",\"content\":\"Write a haiku about recursion in programming.\"}]"
                },
                "AAJ": {
                    "allow_blank": true,
                    "doc": "Whether or not to store the output of this chat completion request for use in our model distillation or evals products.",
                    "key": "store",
                    "private": true,
                    "value": "false"
                },
                "AAK": {
                    "allow_blank": true,
                    "doc": "Developer-defined tags and values used for filtering completions in the dashboard.",
                    "key": "metadata",
                    "private": true,
                    "value": ""
                },
                "AAL": {
                    "allow_blank": true,
                    "doc": "Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim.",
                    "key": "frequency_penalty",
                    "private": true,
                    "value": "0"
                },
                "AAM": {
                    "allow_blank": true,
                    "doc": "Modify the likelihood of specified tokens appearing in the completion.\n\nAccepts a JSON object that maps tokens (specified by their token ID in the tokenizer) to an associated bias value from -100 to 100. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token",
                    "key": "logit_bias",
                    "private": true,
                    "value": ""
                },
                "AAN": {
                    "allow_blank": true,
                    "doc": "Whether to return log probabilities of the output tokens or not. If true, returns the log probabilities of each output token returned in the content of message.",
                    "key": "logprobs",
                    "private": true,
                    "value": "false"
                },
                "AAO": {
                    "allow_blank": true,
                    "doc": "An integer between 0 and 20 specifying the number of most likely tokens to return at each token position, each with an associated log probability. logprobs must be set to true if this parameter is used.",
                    "key": "top_logprobs",
                    "private": true,
                    "value": ""
                },
                "AAP": {
                    "allow_blank": true,
                    "doc": "An upper bound for the number of tokens that can be generated for a completion, including visible output tokens and reasoning tokens.",
                    "key": "max_completion_tokens",
                    "private": true,
                    "value": ""
                },
                "AAQ": {
                    "allow_blank": true,
                    "doc": "How many chat completion choices to generate for each input message. Note that you will be charged based on the number of generated tokens across all of the choices. Keep n as 1 to minimize costs.",
                    "key": "n",
                    "private": true,
                    "value": "1"
                },
                "AAR": {
                    "allow_blank": true,
                    "doc": "Output types that you would like the model to generate for this request. Most models are capable of generating text, which is the default:\n\n[\"text\"]\n\nThe gpt-4o-audio-preview model can also be used to generate audio. To request that this model generate both text and audio responses, you can use:\n\n[\"text\", \"audio\"]",
                    "key": "modalities",
                    "private": true,
                    "value": ""
                },
                "AAS": {
                    "allow_blank": true,
                    "doc": "Configuration for a Predicted Output, which can greatly improve response times when large parts of the model response are known ahead of time. This is most common when you are regenerating a file with only minor changes to most of the content.",
                    "key": "prediction",
                    "private": true,
                    "value": ""
                },
                "AAT": {
                    "allow_blank": true,
                    "doc": "Parameters for audio output. Required when audio output is requested with modalities: [\"audio\"]. Learn more.",
                    "key": "audio",
                    "private": true,
                    "value": ""
                },
                "AAU": {
                    "allow_blank": true,
                    "doc": "Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics.",
                    "key": "presence_penalty",
                    "private": true,
                    "value": "0"
                },
                "AAV": {
                    "allow_blank": true,
                    "doc": "An object specifying the format that the model must output. Compatible with GPT-4o, GPT-4o mini, GPT-4 Turbo and all GPT-3.5 Turbo models newer than gpt-3.5-turbo-1106.\n\nSetting to { \"type\": \"json_schema\", \"json_schema\": {...} } enables Structured Outputs which ensures the model will match your supplied JSON schema. Learn more in the Structured Outputs guide.\n\nSetting to { \"type\": \"json_object\" } enables JSON mode, which ensures the message the model generates is valid JSON.\n\nImportant: when using JSON mode, you must also instruct the model to produce JSON yourself via a system or user message. Without this, the model may generate an unending stream of whitespace until the generation reaches the token limit, resulting in a long-running and seemingly \"stuck\" request. Also note that the message content may be partially cut off if finish_reason=\"length\", which indicates the generation exceeded max_tokens or the conversation exceeded the max context length.",
                    "key": "response_format",
                    "private": true,
                    "value": ""
                },
                "AAW": {
                    "allow_blank": true,
                    "doc": "This feature is in Beta. If specified, our system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed, and you should refer to the system_fingerprint response parameter to monitor changes in the backend.",
                    "key": "seed",
                    "private": true,
                    "value": ""
                },
                "AAX": {
                    "allow_blank": true,
                    "doc": "Specifies the latency tier to use for processing the request. This parameter is relevant for customers subscribed to the scale tier service:\n\n    If set to 'auto', and the Project is Scale tier enabled, the system will utilize scale tier credits until they are exhausted.\n    If set to 'auto', and the Project is not Scale tier enabled, the request will be processed using the default service tier with a lower uptime SLA and no latency guarentee.\n    If set to 'default', the request will be processed using the default service tier with a lower uptime SLA and no latency guarentee.\n    When not set, the default behavior is 'auto'.\n\nWhen this parameter is set, the response body will include the service_tier utilized.",
                    "key": "service_tier",
                    "private": true,
                    "value": "auto"
                },
                "AAY": {
                    "allow_blank": true,
                    "doc": "Up to 4 sequences where the API will stop generating further tokens.",
                    "key": "stop",
                    "private": true,
                    "value": ""
                },
                "AAZ": {
                    "allow_blank": true,
                    "doc": "If set, partial message deltas will be sent, like in ChatGPT. Tokens will be sent as data-only server-sent events as they become available, with the stream terminated by a data: [DONE] message. Example Python code.",
                    "key": "stream",
                    "private": true,
                    "value": "false"
                },
                "AAa": {
                    "allow_blank": true,
                    "doc": "Options for streaming response. Only set this when you set stream: true.",
                    "key": "stream_options",
                    "private": true,
                    "value": ""
                },
                "AAb": {
                    "allow_blank": true,
                    "doc": "What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic.\n\nWe generally recommend altering this or top_p but not both.",
                    "key": "temperature",
                    "private": true,
                    "value": "1"
                },
                "AAc": {
                    "allow_blank": true,
                    "doc": "An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered.\n\nWe generally recommend altering this or temperature but not both.",
                    "key": "top_p",
                    "private": true,
                    "value": "1"
                },
                "AAd": {
                    "allow_blank": true,
                    "doc": "A list of tools the model may call. Currently, only functions are supported as a tool. Use this to provide a list of functions the model may generate JSON inputs for. A max of 128 functions are supported.",
                    "key": "tools",
                    "private": true
                },
                "AAh": {
                    "allow_blank": true,
                    "doc": "A unique identifier representing your end-user, which can help OpenAI to monitor and detect abuse. Learn more.",
                    "key": "user",
                    "private": true,
                    "value": ""
                }
            },
            "initialized": true,
            "method": "post",
            "name": "Text generation",
            "params": {
            },
            "publish_as": "action",
            "rank": 0,
            "ret_value": "api.1731668965534x933373605516410900.plugin_api.AAD",
            "should_reinitialize": true,
            "types": "{\"plugin_api.AAD\":{\"caption\":\"Text generation\",\"fields\":{\"_p_id\":{\"ret_btype\":\"text\",\"caption\":\"id\",\"sample_value\":\"chatcmpl-ATpPFCiHaGPC5GU38Nug7CNtDdnOn\",\"path\":[\"id\"]},\"_p_object\":{\"ret_btype\":\"text\",\"caption\":\"object\",\"sample_value\":\"chat.completion\",\"path\":[\"object\"]},\"_p_created\":{\"ret_btype\":\"number\",\"caption\":\"created\",\"sample_value\":1731672481,\"path\":[\"created\"]},\"_p_model\":{\"ret_btype\":\"text\",\"caption\":\"model\",\"sample_value\":\"gpt-4o-2024-08-06\",\"path\":[\"model\"]},\"_p_choices\":{\"ret_btype\":\"list.api.1731668965534x933373605516410900.plugin_api.AAD.choices\",\"caption\":\"choices\",\"path\":[\"choices\"]},\"_p_usage.prompt_tokens\":{\"ret_btype\":\"number\",\"caption\":\"usage prompt_tokens\",\"sample_value\":26,\"path\":[\"usage\",\"prompt_tokens\"]},\"_p_usage.completion_tokens\":{\"ret_btype\":\"number\",\"caption\":\"usage completion_tokens\",\"sample_value\":20,\"path\":[\"usage\",\"completion_tokens\"]},\"_p_usage.total_tokens\":{\"ret_btype\":\"number\",\"caption\":\"usage total_tokens\",\"sample_value\":46,\"path\":[\"usage\",\"total_tokens\"]},\"_p_usage.prompt_tokens_details.cached_tokens\":{\"ret_btype\":\"number\",\"caption\":\"usage prompt_tokens_details cached_tokens\",\"sample_value\":0,\"path\":[\"usage\",\"prompt_tokens_details\",\"cached_tokens\"]},\"_p_usage.prompt_tokens_details.audio_tokens\":{\"ret_btype\":\"number\",\"caption\":\"usage prompt_tokens_details audio_tokens\",\"sample_value\":0,\"path\":[\"usage\",\"prompt_tokens_details\",\"audio_tokens\"]},\"_p_usage.completion_tokens_details.reasoning_tokens\":{\"ret_btype\":\"number\",\"caption\":\"usage completion_tokens_details reasoning_tokens\",\"sample_value\":0,\"path\":[\"usage\",\"completion_tokens_details\",\"reasoning_tokens\"]},\"_p_usage.completion_tokens_details.audio_tokens\":{\"ret_btype\":\"number\",\"caption\":\"usage completion_tokens_details audio_tokens\",\"sample_value\":0,\"path\":[\"usage\",\"completion_tokens_details\",\"audio_tokens\"]},\"_p_usage.completion_tokens_details.accepted_prediction_tokens\":{\"ret_btype\":\"number\",\"caption\":\"usage completion_tokens_details accepted_prediction_tokens\",\"sample_value\":0,\"path\":[\"usage\",\"completion_tokens_details\",\"accepted_prediction_tokens\"]},\"_p_usage.completion_tokens_details.rejected_prediction_tokens\":{\"ret_btype\":\"number\",\"caption\":\"usage completion_tokens_details rejected_prediction_tokens\",\"sample_value\":0,\"path\":[\"usage\",\"completion_tokens_details\",\"rejected_prediction_tokens\"]},\"_p_service_tier\":{\"ret_btype\":\"text\",\"caption\":\"service_tier\",\"sample_value\":\"default\",\"path\":[\"service_tier\"]},\"_p_system_fingerprint\":{\"ret_btype\":\"text\",\"caption\":\"system_fingerprint\",\"sample_value\":\"fp_45cf54deae\",\"path\":[\"system_fingerprint\"]}}},\"plugin_api.AAD.choices\":{\"caption\":\"Text generation choice\",\"fields\":{\"_p_index\":{\"ret_btype\":\"number\",\"caption\":\"index\",\"sample_value\":0,\"path\":[\"index\"]},\"_p_message.role\":{\"ret_btype\":\"text\",\"caption\":\"message role\",\"sample_value\":\"assistant\",\"path\":[\"message\",\"role\"]},\"_p_message.content\":{\"ret_btype\":\"text\",\"caption\":\"message content\",\"sample_value\":\"Function calls itself,  \\nEndless loops in self-reflect,  \\nSolves with each return.\",\"path\":[\"message\",\"content\"]},\"_p_message.refusal\":{\"ret_btype\":\"text\",\"caption\":\"message refusal\",\"sample_value\":null,\"path\":[\"message\",\"refusal\"]},\"_p_logprobs\":{\"ret_btype\":\"text\",\"caption\":\"logprobs\",\"sample_value\":null,\"path\":[\"logprobs\"]},\"_p_finish_reason\":{\"ret_btype\":\"text\",\"caption\":\"finish_reason\",\"sample_value\":\"stop\",\"path\":[\"finish_reason\"]}}}}",
            "url": "https://api.openai.com/v1/chat/completions",
            "wrap_error": false
        }
    },
    "human": "Open AI",
    "shared_headers": {
        "AAi": {
            "key": "Content-Type",
            "private": true,
            "value": "application/json",
            "visibility": "hidden"
        }
    }
}